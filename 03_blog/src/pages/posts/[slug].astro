---
import type { GetStaticPaths } from "astro";
import BlogLayout from "../../layouts/BlogLayout.astro";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import { getEntry } from "astro:content";
import { Formatter } from "@utils/formatter";

export const getStaticPaths = (async () => {
  const blogPosts = await getCollection("blog");
  //console.log(blogPosts);

  return blogPosts.map((post) => ({
    params: { slug: post.slug },
    props: { post: post },
  }));
}) satisfies GetStaticPaths;

const { post } = Astro.props;
const frontmatter = post.data;

const { Content, headings } = await post.render();
const author = await getEntry('author', post.data.author.id)
---

<BlogLayout title="{title">
  <h1 class="text-xl text-gray-500 mb-0">{frontmatter.title}</h1>
  <!-- <h4 class="text-md text-gray-400 mb-0">{frontmatter.author}</h4> -->
  <div class="text-md text-gray-400 mb-0 flex flex-row my-5">
    <Image 
      src={author.data.avatar}
      class="rounded-full"
      alt={author.data.name}
      width={50}
      height={50}
    />
    <div class="flex flex-col ml-5">
      <a href={`/blog/${frontmatter.author.id}`}>{author.data.name}</a>
      <span class="text-xs text-gray-200">
        {Formatter.formatDate(frontmatter.date)}
      </span>
    </div>
  </div>


  <Image
    src={frontmatter.image}
    alt={frontmatter.title}
    width={600}
    height={220}
    class="object-cover w-full h-[250px] my-5 rounded-md"
    transition:name={`${post.slug}-image`}
  />

  <h3>Tabla de contenidos</h3>
  <ol>
    {
      headings.map(
        (
          heading,
          index // Headings contiene las distintas partes del body que empiecen por #
        ) => (
          <li>
            <a href={`#${heading.slug}`}>
              {index + 1} - {heading.text}
            </a>
          </li>
        )
      )
    }
  </ol>

  <!-- Contenido del mdx-->
  <Content />

  <div class="my-20">
    <a href="#btn-back">Arriba</a>
  </div>
</BlogLayout>
