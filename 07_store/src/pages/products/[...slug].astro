---
import ProductSlideshow from "@/components/products/ProductSlideshow.astro";
import MainLayout from "@/layouts/MainLayout.astro";
import { actions } from "astro:actions";

const { slug } = Astro.params;

const { data, error } = await actions.getProductBySlug(slug ?? "");
if(error){
  return Astro.redirect("/404");
}

const { product, images } = data;


---

<MainLayout
  title={product.title}
  description={product.description}
  >
  <!-- image={image} -->
  <!-- <h1>{product.title}</h1> -->

  <div class="grid grid-cols-1 md:grid-cols-3 w-full gap-6 lg:gap-10">
    <ProductSlideshow images={images} />

    <section class="mr-10">
      <h2 class="text-2xl font-bold mt-12">{product.title}</h2>
      <h2 class="font-bold">${product.price}</h2>

      <h3 class="mt-5">Tallas</h3>
      <ul class="flex gap-3">
        {
          product.sizes
            .split(",")
            .map((size) => <li data-size={size}>{size}</li>)
        }
      </ul>

      <h3 class="mt-5">Cantidad</h3>
      <div>
        <button class="btn-quantity">-</button>
        <input type="number" min="1" value="1" />
        <button class="btn-quantity">+</button>
      </div>

      <button class="mt-5 bg-blue-500 text-white p-3 w-full"
        >Añadir al carrito</button
      >

      <h3 class="mt-10">Descripción</h3>
      <p>{product.description}</p>
    </section>
  </div>

  <input type="hidden" id="product-id" value={product.id} />
</MainLayout>

<script>
  // Sizes
  const sizeElements = document.querySelectorAll('li');                     // Seleccionamos todos los elementos con el selector li
  sizeElements.forEach(liElement => {                                       // Para cada elemento con el selector li
    liElement.addEventListener('click', () => {                             // Añadimos un event listener para cuando se haga click en el elemento
      sizeElements.forEach(s => s.classList.remove('selected-size'));       // Eliminamos la clase selected-size de todos los elementos
      liElement.classList.add('selected-size');                             // Añadimos la clase selected-size al elemento que se haga click
    })
  });

  // Quantity
  const quantityInput = document.querySelector('input') as HTMLInputElement         // Seleccionamos el primer input que tenga el selector input
  const productIdInput = document.querySelector('#product-id') as HTMLInputElement  // Seleccionamos el input con el selector #product-id -> id del producto
  
  let quantity = 1;

  const [decrementButton, incrementButton, addToCardButton] = document.querySelectorAll('button');  // Seleccionamos todos los botones que tengan el selector button
  incrementButton.addEventListener('click', () => {                                  // Añadimos un event listener para cuando se haga click en el botón +
    quantity = Math.min(quantity + 1, 5);                                            // Incrementamos el valor de la variable quantity (solo se puede incrementar hasta 5)
    quantityInput.value = quantity.toString()                                        // Actualizamos el valor del input con el nuevo valor de la variable quantity
  })
  decrementButton.addEventListener('click', () => {                                  // Añadimos un event listener para cuando se haga click en el botón -
    quantity = Math.max(quantity - 1, 1);                                            // Decrementamos el valor de la variable quantity (solo se puede decrementar hasta 1)
    quantityInput.value = quantity.toString()                                        // Actualizamos el valor del input con el nuevo valor de la variable quantity
  })

  // Add to card -> 
  addToCardButton.addEventListener('click', () => {
    const size = document.querySelector('.selected-size')?.textContent            // Seleccionamos el elemento con la clase selected-size, elemento cuya talla se ha seleccionado
    if(!size){
      return alert('Selecciona un tamaño de producto')
    }

    addToCardButton.disabled=true;

    console.log({                                                  // Mostramos en la consola el objeto que se enviará al servidor
      id: productIdInput.value,
      size: size,
      quantity: quantity
    });
  })                                  

</script>

<style>
  h3 {
    @apply font-bold;
  }

  li {
    @apply hover:underline cursor-pointer;
  }

  .selected-size {
    @apply text-blue-500 underline font-bold transition-all;
  }

  .btn-quantity {
    @apply w-10 text-center p-2 border border-gray-300 hover:bg-gray-100 cursor-pointer;
  }

  input {
    @apply w-16 text-center p-2 border border-gray-300;
  }

  input[type="number"]::-webkit-outer-spin-button,
  input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input[type="number"] {
    -moz-appearance: textfield; /* Para Firefox */
  }
</style>
